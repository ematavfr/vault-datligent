events {
    worker_connections 1024;
}

http {
    upstream vault_backend {
        # Vault Nodes avec health checks
        server vault-1:8200 max_fails=3 fail_timeout=30s;
        server vault-2:8200 max_fails=3 fail_timeout=30s backup;
        server vault-3:8200 max_fails=3 fail_timeout=30s backup;
    }

    # Configuration du load balancer Vault
    server {
        listen 80;
        server_name vault.datligent.local localhost;

        # Health check endpoint
        location /v1/sys/health {
            proxy_pass http://vault_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Vault API
        location /v1/ {
            proxy_pass http://vault_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # Vault UI
        location /ui/ {
            proxy_pass http://vault_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Root redirect vers UI
        location / {
            return 301 /ui/;
        }
    }

    # Logs
    access_log /var/log/nginx/vault_access.log;
    error_log /var/log/nginx/vault_error.log;
}